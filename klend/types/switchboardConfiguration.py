'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import BorshPubkey
from construct import Container
from dataclasses import dataclass
from solders.pubkey import Pubkey as SolPubkey

class SwitchboardConfigurationJSON(typing.TypedDict):
    priceAggregator: str
    twapAggregator: str

@dataclass
class SwitchboardConfiguration:
    layout: typing.ClassVar = borsh.CStruct(
        "priceAggregator" /BorshPubkey,
        "twapAggregator" /BorshPubkey,
        )
    #fields
    priceAggregator: SolPubkey
    twapAggregator: SolPubkey
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "SwitchboardConfiguration":
        return cls(
        priceAggregator=obj["priceAggregator"],
        twapAggregator=obj["twapAggregator"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "priceAggregator": self.priceAggregator,
                "twapAggregator": self.twapAggregator,
                }

    def to_json(self) -> SwitchboardConfigurationJSON:
        return {
                "priceAggregator": str(self.priceAggregator),
                "twapAggregator": str(self.twapAggregator),
                }

    @classmethod
    def from_json(cls, obj: SwitchboardConfigurationJSON) -> "SwitchboardConfiguration":
        return cls(
                priceAggregator=SolPubkey.from_string(obj["priceAggregator"]),
                twapAggregator=SolPubkey.from_string(obj["twapAggregator"]),
        )






