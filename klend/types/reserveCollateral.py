'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import BorshPubkey
from construct import Container
from dataclasses import dataclass
from solders.pubkey import Pubkey as SolPubkey

class ReserveCollateralJSON(typing.TypedDict):
    mintPubkey: str
    mintTotalSupply: int
    supplyVault: str
    padding1: list[int]
    padding2: list[int]

@dataclass
class ReserveCollateral:
    layout: typing.ClassVar = borsh.CStruct(
        "mintPubkey" /BorshPubkey,
        "mintTotalSupply" /borsh.U64,
        "supplyVault" /BorshPubkey,
        "padding1" /borsh.U128[32],
        "padding2" /borsh.U128[32],
        )
    #fields
    mintPubkey: SolPubkey
    mintTotalSupply: int
    supplyVault: SolPubkey
    padding1: list[int]
    padding2: list[int]
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "ReserveCollateral":
        return cls(
        mintPubkey=obj["mintPubkey"],
        mintTotalSupply=obj["mintTotalSupply"],
        supplyVault=obj["supplyVault"],
        padding1=obj["padding1"],
        padding2=obj["padding2"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "mintPubkey": self.mintPubkey,
                "mintTotalSupply": self.mintTotalSupply,
                "supplyVault": self.supplyVault,
                "padding1": self.padding1,
                "padding2": self.padding2,
                }

    def to_json(self) -> ReserveCollateralJSON:
        return {
                "mintPubkey": str(self.mintPubkey),
                "mintTotalSupply": self.mintTotalSupply,
                "supplyVault": str(self.supplyVault),
                "padding1": self.padding1,
                "padding2": self.padding2,
                }

    @classmethod
    def from_json(cls, obj: ReserveCollateralJSON) -> "ReserveCollateral":
        return cls(
                mintPubkey=SolPubkey.from_string(obj["mintPubkey"]),
                mintTotalSupply=obj["mintTotalSupply"],
                supplyVault=SolPubkey.from_string(obj["supplyVault"]),
                padding1=obj["padding1"],
                padding2=obj["padding2"],
        )






