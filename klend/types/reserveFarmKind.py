'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import EnumForCodegen
from dataclasses import dataclass


class CollateralJSON(typing.TypedDict):
    kind: typing.Literal["Collateral"]


@dataclass
class Collateral:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> CollateralJSON:
        return CollateralJSON(
            kind="Collateral",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Collateral": {},
        }




class DebtJSON(typing.TypedDict):
    kind: typing.Literal["Debt"]


@dataclass
class Debt:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> DebtJSON:
        return DebtJSON(
            kind="Debt",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Debt": {},
        }





ReserveFarmKindKind = typing.Union[
    Collateral,
    Debt,
]
ReserveFarmKindJSON = typing.Union[
    CollateralJSON,
    DebtJSON,
]

def from_decoded(obj: dict) -> ReserveFarmKindKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Collateral" in obj:
      return Collateral()
    if "Debt" in obj:
      return Debt()
    raise ValueError("Invalid enum object")

def from_json(obj: ReserveFarmKindJSON) -> ReserveFarmKindKind:
    if obj["kind"] == "Collateral":
        return Collateral()

    if obj["kind"] == "Debt":
        return Debt()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")


layout = EnumForCodegen(
"Collateral" / borsh.CStruct(),
"Debt" / borsh.CStruct(),
)
