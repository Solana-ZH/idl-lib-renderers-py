'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID

class InitReserveAccounts(typing.TypedDict):
    lendingMarketOwner:SolPubkey
    lendingMarket:SolPubkey
    lendingMarketAuthority:SolPubkey
    reserve:SolPubkey
    reserveLiquidityMint:SolPubkey
    reserveLiquiditySupply:SolPubkey
    feeReceiver:SolPubkey
    reserveCollateralMint:SolPubkey
    reserveCollateralSupply:SolPubkey
    initialLiquiditySource:SolPubkey
    rent:SolPubkey
    liquidityTokenProgram:SolPubkey
    collateralTokenProgram:SolPubkey
    systemProgram:SolPubkey

def InitReserve(
    accounts: InitReserveAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["lendingMarketOwner"], is_signer=True, is_writable=True),
    AccountMeta(pubkey=accounts["lendingMarket"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["lendingMarketAuthority"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["reserve"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["reserveLiquidityMint"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["reserveLiquiditySupply"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["feeReceiver"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["reserveCollateralMint"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["reserveCollateralSupply"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["initialLiquiditySource"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["rent"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["liquidityTokenProgram"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["collateralTokenProgram"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["systemProgram"], is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x8a\xf5\x47\xe1\x99\x04\x03\x2b"
    encoded_args = b""
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)






