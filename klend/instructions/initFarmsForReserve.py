'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID
class InitFarmsForReserveArgs(typing.TypedDict):
    mode:int


layout = borsh.CStruct(
    "mode" /borsh.U8,
    )


class InitFarmsForReserveAccounts(typing.TypedDict):
    lendingMarketOwner:SolPubkey
    lendingMarket:SolPubkey
    lendingMarketAuthority:SolPubkey
    reserve:SolPubkey
    farmsProgram:SolPubkey
    farmsGlobalConfig:SolPubkey
    farmState:SolPubkey
    farmsVaultAuthority:SolPubkey
    rent:SolPubkey
    systemProgram:SolPubkey

def InitFarmsForReserve(
    args: InitFarmsForReserveArgs,
    accounts: InitFarmsForReserveAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["lendingMarketOwner"], is_signer=True, is_writable=True),
    AccountMeta(pubkey=accounts["lendingMarket"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["lendingMarketAuthority"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["reserve"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["farmsProgram"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["farmsGlobalConfig"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["farmState"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["farmsVaultAuthority"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["rent"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["systemProgram"], is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\xda\x06\x3e\xe9\x01\x21\xe8\x52"
    encoded_args = layout.build({
        "mode":args["mode"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)






