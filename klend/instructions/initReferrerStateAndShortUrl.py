'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID
class InitReferrerStateAndShortUrlArgs(typing.TypedDict):
    shortUrl:str


layout = borsh.CStruct(
    "shortUrl" /borsh.String,
    )


class InitReferrerStateAndShortUrlAccounts(typing.TypedDict):
    referrer:SolPubkey
    referrerState:SolPubkey
    referrerShortUrl:SolPubkey
    referrerUserMetadata:SolPubkey
    rent:SolPubkey
    systemProgram:SolPubkey

def InitReferrerStateAndShortUrl(
    args: InitReferrerStateAndShortUrlArgs,
    accounts: InitReferrerStateAndShortUrlAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["referrer"], is_signer=True, is_writable=True),
    AccountMeta(pubkey=accounts["referrerState"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["referrerShortUrl"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["referrerUserMetadata"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["rent"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["systemProgram"], is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\xa5\x13\x19\x7f\x64\x37\x1f\x5a"
    encoded_args = layout.build({
        "shortUrl":args["shortUrl"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)






