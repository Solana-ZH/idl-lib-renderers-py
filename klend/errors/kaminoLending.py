'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import typing
from anchorpy.error import ProgramError

class InvalidMarketAuthority(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6000, ""
        )

    code = 6000
    name = "InvalidMarketAuthority"
    msg = ""
class InvalidMarketOwner(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6001, ""
        )

    code = 6001
    name = "InvalidMarketOwner"
    msg = ""
class InvalidAccountOwner(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6002, ""
        )

    code = 6002
    name = "InvalidAccountOwner"
    msg = ""
class InvalidAmount(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6003, ""
        )

    code = 6003
    name = "InvalidAmount"
    msg = ""
class InvalidConfig(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6004, ""
        )

    code = 6004
    name = "InvalidConfig"
    msg = ""
class InvalidSigner(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6005, ""
        )

    code = 6005
    name = "InvalidSigner"
    msg = ""
class InvalidAccountInput(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6006, ""
        )

    code = 6006
    name = "InvalidAccountInput"
    msg = ""
class MathOverflow(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6007, ""
        )

    code = 6007
    name = "MathOverflow"
    msg = ""
class InsufficientLiquidity(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6008, ""
        )

    code = 6008
    name = "InsufficientLiquidity"
    msg = ""
class ReserveStale(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6009, ""
        )

    code = 6009
    name = "ReserveStale"
    msg = ""
class WithdrawTooSmall(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6010, ""
        )

    code = 6010
    name = "WithdrawTooSmall"
    msg = ""
class WithdrawTooLarge(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6011, ""
        )

    code = 6011
    name = "WithdrawTooLarge"
    msg = ""
class BorrowTooSmall(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6012, ""
        )

    code = 6012
    name = "BorrowTooSmall"
    msg = ""
class BorrowTooLarge(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6013, ""
        )

    code = 6013
    name = "BorrowTooLarge"
    msg = ""
class RepayTooSmall(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6014, ""
        )

    code = 6014
    name = "RepayTooSmall"
    msg = ""
class LiquidationTooSmall(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6015, ""
        )

    code = 6015
    name = "LiquidationTooSmall"
    msg = ""
class ObligationHealthy(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6016, ""
        )

    code = 6016
    name = "ObligationHealthy"
    msg = ""
class ObligationStale(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6017, ""
        )

    code = 6017
    name = "ObligationStale"
    msg = ""
class ObligationReserveLimit(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6018, ""
        )

    code = 6018
    name = "ObligationReserveLimit"
    msg = ""
class InvalidObligationOwner(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6019, ""
        )

    code = 6019
    name = "InvalidObligationOwner"
    msg = ""
class ObligationDepositsEmpty(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6020, ""
        )

    code = 6020
    name = "ObligationDepositsEmpty"
    msg = ""
class ObligationBorrowsEmpty(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6021, ""
        )

    code = 6021
    name = "ObligationBorrowsEmpty"
    msg = ""
class ObligationDepositsZero(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6022, ""
        )

    code = 6022
    name = "ObligationDepositsZero"
    msg = ""
class ObligationBorrowsZero(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6023, ""
        )

    code = 6023
    name = "ObligationBorrowsZero"
    msg = ""
class InvalidObligationCollateral(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6024, ""
        )

    code = 6024
    name = "InvalidObligationCollateral"
    msg = ""
class InvalidObligationLiquidity(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6025, ""
        )

    code = 6025
    name = "InvalidObligationLiquidity"
    msg = ""
class ObligationCollateralEmpty(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6026, ""
        )

    code = 6026
    name = "ObligationCollateralEmpty"
    msg = ""
class ObligationLiquidityEmpty(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6027, ""
        )

    code = 6027
    name = "ObligationLiquidityEmpty"
    msg = ""
class NegativeInterestRate(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6028, ""
        )

    code = 6028
    name = "NegativeInterestRate"
    msg = ""
class InvalidOracleConfig(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6029, ""
        )

    code = 6029
    name = "InvalidOracleConfig"
    msg = ""
class InsufficientProtocolFeesToRedeem(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6030, ""
        )

    code = 6030
    name = "InsufficientProtocolFeesToRedeem"
    msg = ""
class FlashBorrowCpi(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6031, ""
        )

    code = 6031
    name = "FlashBorrowCpi"
    msg = ""
class NoFlashRepayFound(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6032, ""
        )

    code = 6032
    name = "NoFlashRepayFound"
    msg = ""
class InvalidFlashRepay(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6033, ""
        )

    code = 6033
    name = "InvalidFlashRepay"
    msg = ""
class FlashRepayCpi(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6034, ""
        )

    code = 6034
    name = "FlashRepayCpi"
    msg = ""
class MultipleFlashBorrows(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6035, ""
        )

    code = 6035
    name = "MultipleFlashBorrows"
    msg = ""
class FlashLoansDisabled(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6036, ""
        )

    code = 6036
    name = "FlashLoansDisabled"
    msg = ""
class SwitchboardV2Error(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6037, ""
        )

    code = 6037
    name = "SwitchboardV2Error"
    msg = ""
class CouldNotDeserializeScope(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6038, ""
        )

    code = 6038
    name = "CouldNotDeserializeScope"
    msg = ""
class PriceTooOld(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6039, ""
        )

    code = 6039
    name = "PriceTooOld"
    msg = ""
class PriceTooDivergentFromTwap(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6040, ""
        )

    code = 6040
    name = "PriceTooDivergentFromTwap"
    msg = ""
class InvalidTwapPrice(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6041, ""
        )

    code = 6041
    name = "InvalidTwapPrice"
    msg = ""
class GlobalEmergencyMode(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6042, ""
        )

    code = 6042
    name = "GlobalEmergencyMode"
    msg = ""
class InvalidFlag(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6043, ""
        )

    code = 6043
    name = "InvalidFlag"
    msg = ""
class PriceNotValid(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6044, ""
        )

    code = 6044
    name = "PriceNotValid"
    msg = ""
class PriceIsBiggerThanHeuristic(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6045, ""
        )

    code = 6045
    name = "PriceIsBiggerThanHeuristic"
    msg = ""
class PriceIsLowerThanHeuristic(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6046, ""
        )

    code = 6046
    name = "PriceIsLowerThanHeuristic"
    msg = ""
class PriceIsZero(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6047, ""
        )

    code = 6047
    name = "PriceIsZero"
    msg = ""
class PriceConfidenceTooWide(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6048, ""
        )

    code = 6048
    name = "PriceConfidenceTooWide"
    msg = ""
class IntegerOverflow(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6049, ""
        )

    code = 6049
    name = "IntegerOverflow"
    msg = ""
class NoFarmForReserve(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6050, ""
        )

    code = 6050
    name = "NoFarmForReserve"
    msg = ""
class IncorrectInstructionInPosition(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6051, ""
        )

    code = 6051
    name = "IncorrectInstructionInPosition"
    msg = ""
class NoPriceFound(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6052, ""
        )

    code = 6052
    name = "NoPriceFound"
    msg = ""
class InvalidTwapConfig(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6053, ""
        )

    code = 6053
    name = "InvalidTwapConfig"
    msg = ""
class InvalidPythPriceAccount(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6054, ""
        )

    code = 6054
    name = "InvalidPythPriceAccount"
    msg = ""
class InvalidSwitchboardAccount(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6055, ""
        )

    code = 6055
    name = "InvalidSwitchboardAccount"
    msg = ""
class InvalidScopePriceAccount(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6056, ""
        )

    code = 6056
    name = "InvalidScopePriceAccount"
    msg = ""
class ObligationCollateralLtvZero(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6057, ""
        )

    code = 6057
    name = "ObligationCollateralLtvZero"
    msg = ""
class InvalidObligationSeedsValue(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6058, ""
        )

    code = 6058
    name = "InvalidObligationSeedsValue"
    msg = ""
class DeprecatedInvalidObligationId(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6059, ""
        )

    code = 6059
    name = "DeprecatedInvalidObligationId"
    msg = ""
class InvalidBorrowRateCurvePoint(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6060, ""
        )

    code = 6060
    name = "InvalidBorrowRateCurvePoint"
    msg = ""
class InvalidUtilizationRate(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6061, ""
        )

    code = 6061
    name = "InvalidUtilizationRate"
    msg = ""
class CannotSocializeObligationWithCollateral(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6062, ""
        )

    code = 6062
    name = "CannotSocializeObligationWithCollateral"
    msg = ""
class ObligationEmpty(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6063, ""
        )

    code = 6063
    name = "ObligationEmpty"
    msg = ""
class WithdrawalCapReached(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6064, ""
        )

    code = 6064
    name = "WithdrawalCapReached"
    msg = ""
class LastTimestampGreaterThanCurrent(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6065, ""
        )

    code = 6065
    name = "LastTimestampGreaterThanCurrent"
    msg = ""
class LiquidationRewardTooSmall(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6066, ""
        )

    code = 6066
    name = "LiquidationRewardTooSmall"
    msg = ""
class IsolatedAssetTierViolation(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6067, ""
        )

    code = 6067
    name = "IsolatedAssetTierViolation"
    msg = ""
class InconsistentElevationGroup(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6068, ""
        )

    code = 6068
    name = "InconsistentElevationGroup"
    msg = ""
class InvalidElevationGroup(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6069, ""
        )

    code = 6069
    name = "InvalidElevationGroup"
    msg = ""
class InvalidElevationGroupConfig(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6070, ""
        )

    code = 6070
    name = "InvalidElevationGroupConfig"
    msg = ""
class UnhealthyElevationGroupLtv(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6071, ""
        )

    code = 6071
    name = "UnhealthyElevationGroupLtv"
    msg = ""
class ElevationGroupNewLoansDisabled(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6072, ""
        )

    code = 6072
    name = "ElevationGroupNewLoansDisabled"
    msg = ""
class ReserveDeprecated(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6073, ""
        )

    code = 6073
    name = "ReserveDeprecated"
    msg = ""
class ReferrerAccountNotInitialized(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6074, ""
        )

    code = 6074
    name = "ReferrerAccountNotInitialized"
    msg = ""
class ReferrerAccountMintMissmatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6075, ""
        )

    code = 6075
    name = "ReferrerAccountMintMissmatch"
    msg = ""
class ReferrerAccountWrongAddress(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6076, ""
        )

    code = 6076
    name = "ReferrerAccountWrongAddress"
    msg = ""
class ReferrerAccountReferrerMissmatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6077, ""
        )

    code = 6077
    name = "ReferrerAccountReferrerMissmatch"
    msg = ""
class ReferrerAccountMissing(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6078, ""
        )

    code = 6078
    name = "ReferrerAccountMissing"
    msg = ""
class InsufficientReferralFeesToRedeem(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6079, ""
        )

    code = 6079
    name = "InsufficientReferralFeesToRedeem"
    msg = ""
class CpiDisabled(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6080, ""
        )

    code = 6080
    name = "CpiDisabled"
    msg = ""
class ShortUrlNotAsciiAlphanumeric(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6081, ""
        )

    code = 6081
    name = "ShortUrlNotAsciiAlphanumeric"
    msg = ""
class ReserveObsolete(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6082, ""
        )

    code = 6082
    name = "ReserveObsolete"
    msg = ""
class ElevationGroupAlreadyActivated(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6083, ""
        )

    code = 6083
    name = "ElevationGroupAlreadyActivated"
    msg = ""
class ObligationInObsoleteReserve(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6084, ""
        )

    code = 6084
    name = "ObligationInObsoleteReserve"
    msg = ""
class ReferrerStateOwnerMismatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6085, ""
        )

    code = 6085
    name = "ReferrerStateOwnerMismatch"
    msg = ""
class UserMetadataOwnerAlreadySet(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6086, ""
        )

    code = 6086
    name = "UserMetadataOwnerAlreadySet"
    msg = ""
class CollateralNonLiquidatable(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6087, ""
        )

    code = 6087
    name = "CollateralNonLiquidatable"
    msg = ""
class BorrowingDisabled(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6088, ""
        )

    code = 6088
    name = "BorrowingDisabled"
    msg = ""
class BorrowLimitExceeded(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6089, ""
        )

    code = 6089
    name = "BorrowLimitExceeded"
    msg = ""
class DepositLimitExceeded(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6090, ""
        )

    code = 6090
    name = "DepositLimitExceeded"
    msg = ""
class BorrowingDisabledOutsideElevationGroup(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6091, ""
        )

    code = 6091
    name = "BorrowingDisabledOutsideElevationGroup"
    msg = ""
class NetValueRemainingTooSmall(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6092, ""
        )

    code = 6092
    name = "NetValueRemainingTooSmall"
    msg = ""
class WorseLTVBlocked(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6093, ""
        )

    code = 6093
    name = "WorseLTVBlocked"
    msg = ""
class LiabilitiesBiggerThanAssets(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6094, ""
        )

    code = 6094
    name = "LiabilitiesBiggerThanAssets"
    msg = ""
class ReserveTokenBalanceMismatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6095, ""
        )

    code = 6095
    name = "ReserveTokenBalanceMismatch"
    msg = ""
class ReserveVaultBalanceMismatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6096, ""
        )

    code = 6096
    name = "ReserveVaultBalanceMismatch"
    msg = ""
class ReserveAccountingMismatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6097, ""
        )

    code = 6097
    name = "ReserveAccountingMismatch"
    msg = ""
class BorrowingAboveUtilizationRateDisabled(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6098, ""
        )

    code = 6098
    name = "BorrowingAboveUtilizationRateDisabled"
    msg = ""
class LiquidationBorrowFactorPriority(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6099, ""
        )

    code = 6099
    name = "LiquidationBorrowFactorPriority"
    msg = ""
class LiquidationLowestLTVPriority(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6100, ""
        )

    code = 6100
    name = "LiquidationLowestLTVPriority"
    msg = ""
class ElevationGroupBorrowLimitExceeded(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6101, ""
        )

    code = 6101
    name = "ElevationGroupBorrowLimitExceeded"
    msg = ""
class ElevationGroupWithoutDebtReserve(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6102, ""
        )

    code = 6102
    name = "ElevationGroupWithoutDebtReserve"
    msg = ""
class ElevationGroupMaxCollateralReserveZero(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6103, ""
        )

    code = 6103
    name = "ElevationGroupMaxCollateralReserveZero"
    msg = ""
class ElevationGroupHasAnotherDebtReserve(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6104, ""
        )

    code = 6104
    name = "ElevationGroupHasAnotherDebtReserve"
    msg = ""
class ElevationGroupDebtReserveAsCollateral(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6105, ""
        )

    code = 6105
    name = "ElevationGroupDebtReserveAsCollateral"
    msg = ""
class ObligationCollateralExceedsElevationGroupLimit(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6106, ""
        )

    code = 6106
    name = "ObligationCollateralExceedsElevationGroupLimit"
    msg = ""
class ObligationElevationGroupMultipleDebtReserve(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6107, ""
        )

    code = 6107
    name = "ObligationElevationGroupMultipleDebtReserve"
    msg = ""
class UnsupportedTokenExtension(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6108, ""
        )

    code = 6108
    name = "UnsupportedTokenExtension"
    msg = ""
class InvalidTokenAccount(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6109, ""
        )

    code = 6109
    name = "InvalidTokenAccount"
    msg = ""
class DepositDisabledOutsideElevationGroup(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6110, ""
        )

    code = 6110
    name = "DepositDisabledOutsideElevationGroup"
    msg = ""
class CannotCalculateReferralAmountDueToSlotsMismatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6111, ""
        )

    code = 6111
    name = "CannotCalculateReferralAmountDueToSlotsMismatch"
    msg = ""
class ObligationOwnersMustMatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6112, ""
        )

    code = 6112
    name = "ObligationOwnersMustMatch"
    msg = ""
class ObligationsMustMatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6113, ""
        )

    code = 6113
    name = "ObligationsMustMatch"
    msg = ""
class LendingMarketsMustMatch(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6114, ""
        )

    code = 6114
    name = "LendingMarketsMustMatch"
    msg = ""
class ObligationCurrentlyMarkedForDeleveraging(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6115, ""
        )

    code = 6115
    name = "ObligationCurrentlyMarkedForDeleveraging"
    msg = ""
class MaximumWithdrawValueZero(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6116, ""
        )

    code = 6116
    name = "MaximumWithdrawValueZero"
    msg = ""
class ZeroMaxLtvAssetsInDeposits(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6117, ""
        )

    code = 6117
    name = "ZeroMaxLtvAssetsInDeposits"
    msg = ""
class MinLtvAssetsPriority(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6118, ""
        )

    code = 6118
    name = "MinLtvAssetsPriority"
    msg = ""
class WorseLTVThanUnhealthyLTV(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6119, ""
        )

    code = 6119
    name = "WorseLTVThanUnhealthyLTV"
    msg = ""
class FarmAccountsMissing(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6120, ""
        )

    code = 6120
    name = "FarmAccountsMissing"
    msg = ""
class RepayTooSmallForFullLiquidation(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6121, ""
        )

    code = 6121
    name = "RepayTooSmallForFullLiquidation"
    msg = ""
class InsufficientRepayAmount(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6122, ""
        )

    code = 6122
    name = "InsufficientRepayAmount"
    msg = ""
class OrderIndexOutOfBounds(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6123, ""
        )

    code = 6123
    name = "OrderIndexOutOfBounds"
    msg = ""
class InvalidOrderConfiguration(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6124, ""
        )

    code = 6124
    name = "InvalidOrderConfiguration"
    msg = ""
class OrderConfigurationNotSupportedByObligation(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6125, ""
        )

    code = 6125
    name = "OrderConfigurationNotSupportedByObligation"
    msg = ""
class OperationNotPermittedWithCurrentObligationOrders(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6126, ""
        )

    code = 6126
    name = "OperationNotPermittedWithCurrentObligationOrders"
    msg = ""

CustomError = typing.Union[
    InvalidMarketAuthority,
    InvalidMarketOwner,
    InvalidAccountOwner,
    InvalidAmount,
    InvalidConfig,
    InvalidSigner,
    InvalidAccountInput,
    MathOverflow,
    InsufficientLiquidity,
    ReserveStale,
    WithdrawTooSmall,
    WithdrawTooLarge,
    BorrowTooSmall,
    BorrowTooLarge,
    RepayTooSmall,
    LiquidationTooSmall,
    ObligationHealthy,
    ObligationStale,
    ObligationReserveLimit,
    InvalidObligationOwner,
    ObligationDepositsEmpty,
    ObligationBorrowsEmpty,
    ObligationDepositsZero,
    ObligationBorrowsZero,
    InvalidObligationCollateral,
    InvalidObligationLiquidity,
    ObligationCollateralEmpty,
    ObligationLiquidityEmpty,
    NegativeInterestRate,
    InvalidOracleConfig,
    InsufficientProtocolFeesToRedeem,
    FlashBorrowCpi,
    NoFlashRepayFound,
    InvalidFlashRepay,
    FlashRepayCpi,
    MultipleFlashBorrows,
    FlashLoansDisabled,
    SwitchboardV2Error,
    CouldNotDeserializeScope,
    PriceTooOld,
    PriceTooDivergentFromTwap,
    InvalidTwapPrice,
    GlobalEmergencyMode,
    InvalidFlag,
    PriceNotValid,
    PriceIsBiggerThanHeuristic,
    PriceIsLowerThanHeuristic,
    PriceIsZero,
    PriceConfidenceTooWide,
    IntegerOverflow,
    NoFarmForReserve,
    IncorrectInstructionInPosition,
    NoPriceFound,
    InvalidTwapConfig,
    InvalidPythPriceAccount,
    InvalidSwitchboardAccount,
    InvalidScopePriceAccount,
    ObligationCollateralLtvZero,
    InvalidObligationSeedsValue,
    DeprecatedInvalidObligationId,
    InvalidBorrowRateCurvePoint,
    InvalidUtilizationRate,
    CannotSocializeObligationWithCollateral,
    ObligationEmpty,
    WithdrawalCapReached,
    LastTimestampGreaterThanCurrent,
    LiquidationRewardTooSmall,
    IsolatedAssetTierViolation,
    InconsistentElevationGroup,
    InvalidElevationGroup,
    InvalidElevationGroupConfig,
    UnhealthyElevationGroupLtv,
    ElevationGroupNewLoansDisabled,
    ReserveDeprecated,
    ReferrerAccountNotInitialized,
    ReferrerAccountMintMissmatch,
    ReferrerAccountWrongAddress,
    ReferrerAccountReferrerMissmatch,
    ReferrerAccountMissing,
    InsufficientReferralFeesToRedeem,
    CpiDisabled,
    ShortUrlNotAsciiAlphanumeric,
    ReserveObsolete,
    ElevationGroupAlreadyActivated,
    ObligationInObsoleteReserve,
    ReferrerStateOwnerMismatch,
    UserMetadataOwnerAlreadySet,
    CollateralNonLiquidatable,
    BorrowingDisabled,
    BorrowLimitExceeded,
    DepositLimitExceeded,
    BorrowingDisabledOutsideElevationGroup,
    NetValueRemainingTooSmall,
    WorseLTVBlocked,
    LiabilitiesBiggerThanAssets,
    ReserveTokenBalanceMismatch,
    ReserveVaultBalanceMismatch,
    ReserveAccountingMismatch,
    BorrowingAboveUtilizationRateDisabled,
    LiquidationBorrowFactorPriority,
    LiquidationLowestLTVPriority,
    ElevationGroupBorrowLimitExceeded,
    ElevationGroupWithoutDebtReserve,
    ElevationGroupMaxCollateralReserveZero,
    ElevationGroupHasAnotherDebtReserve,
    ElevationGroupDebtReserveAsCollateral,
    ObligationCollateralExceedsElevationGroupLimit,
    ObligationElevationGroupMultipleDebtReserve,
    UnsupportedTokenExtension,
    InvalidTokenAccount,
    DepositDisabledOutsideElevationGroup,
    CannotCalculateReferralAmountDueToSlotsMismatch,
    ObligationOwnersMustMatch,
    ObligationsMustMatch,
    LendingMarketsMustMatch,
    ObligationCurrentlyMarkedForDeleveraging,
    MaximumWithdrawValueZero,
    ZeroMaxLtvAssetsInDeposits,
    MinLtvAssetsPriority,
    WorseLTVThanUnhealthyLTV,
    FarmAccountsMissing,
    RepayTooSmallForFullLiquidation,
    InsufficientRepayAmount,
    OrderIndexOutOfBounds,
    InvalidOrderConfiguration,
    OrderConfigurationNotSupportedByObligation,
    OperationNotPermittedWithCurrentObligationOrders,
 ]
CUSTOM_ERROR_MAP: dict[int, CustomError] = {
    6000: InvalidMarketAuthority(),
    6001: InvalidMarketOwner(),
    6002: InvalidAccountOwner(),
    6003: InvalidAmount(),
    6004: InvalidConfig(),
    6005: InvalidSigner(),
    6006: InvalidAccountInput(),
    6007: MathOverflow(),
    6008: InsufficientLiquidity(),
    6009: ReserveStale(),
    6010: WithdrawTooSmall(),
    6011: WithdrawTooLarge(),
    6012: BorrowTooSmall(),
    6013: BorrowTooLarge(),
    6014: RepayTooSmall(),
    6015: LiquidationTooSmall(),
    6016: ObligationHealthy(),
    6017: ObligationStale(),
    6018: ObligationReserveLimit(),
    6019: InvalidObligationOwner(),
    6020: ObligationDepositsEmpty(),
    6021: ObligationBorrowsEmpty(),
    6022: ObligationDepositsZero(),
    6023: ObligationBorrowsZero(),
    6024: InvalidObligationCollateral(),
    6025: InvalidObligationLiquidity(),
    6026: ObligationCollateralEmpty(),
    6027: ObligationLiquidityEmpty(),
    6028: NegativeInterestRate(),
    6029: InvalidOracleConfig(),
    6030: InsufficientProtocolFeesToRedeem(),
    6031: FlashBorrowCpi(),
    6032: NoFlashRepayFound(),
    6033: InvalidFlashRepay(),
    6034: FlashRepayCpi(),
    6035: MultipleFlashBorrows(),
    6036: FlashLoansDisabled(),
    6037: SwitchboardV2Error(),
    6038: CouldNotDeserializeScope(),
    6039: PriceTooOld(),
    6040: PriceTooDivergentFromTwap(),
    6041: InvalidTwapPrice(),
    6042: GlobalEmergencyMode(),
    6043: InvalidFlag(),
    6044: PriceNotValid(),
    6045: PriceIsBiggerThanHeuristic(),
    6046: PriceIsLowerThanHeuristic(),
    6047: PriceIsZero(),
    6048: PriceConfidenceTooWide(),
    6049: IntegerOverflow(),
    6050: NoFarmForReserve(),
    6051: IncorrectInstructionInPosition(),
    6052: NoPriceFound(),
    6053: InvalidTwapConfig(),
    6054: InvalidPythPriceAccount(),
    6055: InvalidSwitchboardAccount(),
    6056: InvalidScopePriceAccount(),
    6057: ObligationCollateralLtvZero(),
    6058: InvalidObligationSeedsValue(),
    6059: DeprecatedInvalidObligationId(),
    6060: InvalidBorrowRateCurvePoint(),
    6061: InvalidUtilizationRate(),
    6062: CannotSocializeObligationWithCollateral(),
    6063: ObligationEmpty(),
    6064: WithdrawalCapReached(),
    6065: LastTimestampGreaterThanCurrent(),
    6066: LiquidationRewardTooSmall(),
    6067: IsolatedAssetTierViolation(),
    6068: InconsistentElevationGroup(),
    6069: InvalidElevationGroup(),
    6070: InvalidElevationGroupConfig(),
    6071: UnhealthyElevationGroupLtv(),
    6072: ElevationGroupNewLoansDisabled(),
    6073: ReserveDeprecated(),
    6074: ReferrerAccountNotInitialized(),
    6075: ReferrerAccountMintMissmatch(),
    6076: ReferrerAccountWrongAddress(),
    6077: ReferrerAccountReferrerMissmatch(),
    6078: ReferrerAccountMissing(),
    6079: InsufficientReferralFeesToRedeem(),
    6080: CpiDisabled(),
    6081: ShortUrlNotAsciiAlphanumeric(),
    6082: ReserveObsolete(),
    6083: ElevationGroupAlreadyActivated(),
    6084: ObligationInObsoleteReserve(),
    6085: ReferrerStateOwnerMismatch(),
    6086: UserMetadataOwnerAlreadySet(),
    6087: CollateralNonLiquidatable(),
    6088: BorrowingDisabled(),
    6089: BorrowLimitExceeded(),
    6090: DepositLimitExceeded(),
    6091: BorrowingDisabledOutsideElevationGroup(),
    6092: NetValueRemainingTooSmall(),
    6093: WorseLTVBlocked(),
    6094: LiabilitiesBiggerThanAssets(),
    6095: ReserveTokenBalanceMismatch(),
    6096: ReserveVaultBalanceMismatch(),
    6097: ReserveAccountingMismatch(),
    6098: BorrowingAboveUtilizationRateDisabled(),
    6099: LiquidationBorrowFactorPriority(),
    6100: LiquidationLowestLTVPriority(),
    6101: ElevationGroupBorrowLimitExceeded(),
    6102: ElevationGroupWithoutDebtReserve(),
    6103: ElevationGroupMaxCollateralReserveZero(),
    6104: ElevationGroupHasAnotherDebtReserve(),
    6105: ElevationGroupDebtReserveAsCollateral(),
    6106: ObligationCollateralExceedsElevationGroupLimit(),
    6107: ObligationElevationGroupMultipleDebtReserve(),
    6108: UnsupportedTokenExtension(),
    6109: InvalidTokenAccount(),
    6110: DepositDisabledOutsideElevationGroup(),
    6111: CannotCalculateReferralAmountDueToSlotsMismatch(),
    6112: ObligationOwnersMustMatch(),
    6113: ObligationsMustMatch(),
    6114: LendingMarketsMustMatch(),
    6115: ObligationCurrentlyMarkedForDeleveraging(),
    6116: MaximumWithdrawValueZero(),
    6117: ZeroMaxLtvAssetsInDeposits(),
    6118: MinLtvAssetsPriority(),
    6119: WorseLTVThanUnhealthyLTV(),
    6120: FarmAccountsMissing(),
    6121: RepayTooSmallForFullLiquidation(),
    6122: InsufficientRepayAmount(),
    6123: OrderIndexOutOfBounds(),
    6124: InvalidOrderConfiguration(),
    6125: OrderConfigurationNotSupportedByObligation(),
    6126: OperationNotPermittedWithCurrentObligationOrders(),
}

def from_code(code: int) -> typing.Optional[CustomError]:
    maybe_err = CUSTOM_ERROR_MAP.get(code)
    if maybe_err is None:
        return None
    return maybe_err

